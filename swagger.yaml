# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: OaaChat API
  description: REST API for a Slack chat app
  version: "1.0.0"
# the domain of the service
# host: api.uber.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /users:
    post:
      summary: Creates a new user.
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User-post'
      tags:
        - Users
      responses:
        200:
          description: A JSON of the created user.
          schema:
              $ref: '#/definitions/User-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Gets all active users.
      tags:
        - Users
      responses:
        200:
          description: An array of all the active users.
          schema:
            type: array
            items:
              $ref: '#/definitions/User-activate-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes user.
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User-delete'
      tags:
        - Users
      responses:
        200:
          description: A JSON with all the information of the deleted user.
          schema:
            $ref: '#/definitions/User-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/activate:
    post:
      summary: Activates a recently created user.
      parameters:
        - name: hash
          in: body
          required: true
          schema:
            $ref: '#/definitions/Activation-hash'
      tags:
        - Users
      responses:
        200:
          description: A JSON of the now active user
          schema:
              $ref: '#/definitions/User-activate-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/add-friend:
    post:
      summary: Adds specified user to the current user's friend list.
      parameters:
        - name: username
          in: body
          required: true
          schema:
            $ref: '#/definitions/Friend'
      tags:
        - Users
      responses:
        200:
          description: A JSON of the user who did the action.
          schema:
              $ref: '#/definitions/User-activate-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/remove-friend:
    post:
      summary: Removes the specified user from the current user's friend list.
      parameters:
        - name: username
          in: body
          required: true
          schema:
            $ref: '#/definitions/Friend'
      tags:
        - Users
      responses:
        200:
          description: A JSON of the user who did the action.
          schema:
              $ref: '#/definitions/User-activate-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{username}:
    get:
      summary: Returns user.
      description: Gets an object with all the information of the specified username.
      parameters:
        - name: username
          in: path
          description: Username of the user who will be added to the friend list.
          required: true
          type: string
      tags:
        - Users
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User-activate-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update user.
      parameters:
        - name: username
          in: path
          description: Username of the user being updated.
          required: true
          type: string
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User-update'
      tags:
        - Users
      responses:
        200:
          description: A JSON of the user.
          schema:
            $ref: '#/definitions/User-activate-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /users/rooms:
    get:
      summary: Returns user's chat rooms.
      description: Gets all the rooms where the user is currently involved.
      tags:
        - Users
      responses:
        200:
          description: An array of rooms.
          schema:
            $ref: '#/definitions/User-room-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /users/friends:
    get:
      summary: Returns user's friends.
      description: Gets all the friends of the user logged in.
      tags:
        - Users
      responses:
        200:
          description: An array of friends.
          schema:
            $ref: '#/definitions/User-friends-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /me:
    get:
      summary: Returns information of the user login.
      tags:
        - Users
      responses:
        200:
          description: A JSON of the login user.
          schema:
            $ref: '#/definitions/User-me-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /login:
    post:
      summary: Returns token authentication.
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            $ref: '#/definitions/Login'
      tags:
        - Users
      responses:
        200:
          description: Token used for authentication.
          schema:
            $ref: '#/definitions/Token'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /rooms:
    post:
      summary: Creates a new chat room.
      parameters:
        - name: room
          in: body
          required: true
          schema:
            $ref: '#/definitions/Room-post'
      tags:
        - Rooms
      responses:
        200:
          description: Information of the room created.
          schema:
            $ref: '#/definitions/Room-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Gets all the existing rooms.
      tags:
        - Rooms
      responses:
        200:
          description: An array of all the existing rooms.
          schema:
            type: array
            items:
              $ref: '#/definitions/Room-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /rooms/{title}:
    get:
      summary: Gets the room of the specified title.
      parameters:
        - name: title
          in: path
          description: Name of the room to look for.
          required: true
          type: string
      tags:
        - Rooms
      responses:
        200:
          description: Room found.
          schema:
            $ref: '#/definitions/Room-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /rooms/add-users:
    post:
      summary: Adds an array of users to the room.
      parameters:
        - name: room
          in: body
          required: true
          schema:
            $ref: '#/definitions/Room-add-users'
      tags:
        - Rooms
      responses:
        200:
          description: Information of the room.
          schema:
            $ref: '#/definitions/Room-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /rooms/remove-users:
    post:
      summary: Removes the selected members from the room.
      parameters:
        - name: room
          in: body
          required: true
          schema:
            $ref: '#/definitions/Room-remove-users'
      tags:
        - Rooms
      responses:
        200:
          description: Information of the room.
          schema:
            $ref: '#/definitions/Room-post-response'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  User-post-response:
    type: object
    properties:
      email:
        type: string
        description: Email of user.
      username:
        type: string
        description: Username of user.
      firstname:
        type: string
        description: Firstname of user.
      lastname:
        type: string
        description: Lastname of user.
      birthday:
        type: string
        description: Birthday of user, example = "1995-10-01".
      age:
        type: integer
        description: Age of user.
      gender:
        type: string
        description: Gender of user.
      password:
        type: string
        description: encrypted password of user.
      avatar:
        type: string
        description: Profile picture of user.
      friends:
        type: array
        items:
          type: string
        description: Username of friends.
      rooms:
        type: array
        items:
          type: string
        description: Chat rooms.
      active:
        type: boolean
        description: Wether the user is active or not.
  User-activate-response:
    type: object
    properties:
      email:
        type: string
        description: Email of user.
      username:
        type: string
        description: Username of user.
      firstname:
        type: string
        description: Firstname of user.
      lastname:
        type: string
        description: Lastname of user.
      birthday:
        type: string
        description: Birthday of user, example = "1995-10-01".
      age:
        type: integer
        description: Age of user.
      gender:
        type: string
        description: Gender of user.
      avatar:
        type: string
        description: Profile picture of user.
      friends:
        type: array
        items:
          type: string
        description: Username of friends.
      rooms:
        type: array
        items:
          type: string
        description: Title of each chat room where the user is involved.
  User-me-response:
    type: object
    properties:
      email:
        type: string
        description: Email of user.
      username:
        type: string
        description: Username of user.
      firstname:
        type: string
        description: Firstname of user.
      lastname:
        type: string
        description: Lastname of user.
      birthday:
        type: string
        description: Birthday of user, example = "1995-10-01".
      age:
        type: integer
        description: Age of user.
      gender:
        type: string
        description: Gender of user.
      avatar:
        type: string
        description: Profile picture of user.
      friends:
        type: array
        items:
          $ref: '#/definitions/User-activate-response'
        description: Model of friends.
      rooms:
        type: array
        items:
          $ref: '#/definitions/Room-post-response'
        description: Model of each room.
        
  User-room-response:
    type: object
    properties:
      rooms:
        type: array
        items:
          type: string
        description: Title of each chat room where the user is involved.
        
  User-friends-response:
    type: object
    properties:
      friends:
        type: array
        items:
          type: string
        description: Username of each of the friends.
        
  User-post:
    type: object
    properties:
      email:
        type: string
        description: Email of user.
      username:
        type: string
        description: Username of user.
      firstname:
        type: string
        description: Firstname of user.
      lastname:
        type: string
        description: Lastname of user.
      birthday:
        type: string
        description: Birthday of user, example = "1995-10-01".
      gender:
        type: string
        description: Gender of user.
      password:
        type: string
        description: password of user.
  User-update:
    type: object
    properties:
      username:
        type: string
        description: Username of user.
      firstname:
        type: string
        description: Firstname of user.
      lastname:
        type: string
        description: Lastname of user.
      birthday:
        type: string
        description: Birthday of user, example = "1995-10-01".
      gender:
        type: string
        description: Gender of user.
      avatar:
        type: string
        description: User's profile picture.
  User-delete:
    type: object
    properties:
      email:
        type: string
        description: Email of user.
      password:
        type: string
        description: password of user.
  Room-post-response:
    type: object
    properties:
      title:
        type: string
        description: Name of new room.
      description:
        type: string
        description: Description visible to the members.
      members:
        type: array
        items:
          type: string
        description: Members of the new group.
      visibility:
        type: string
        description: It can only be public or private.
      admin:
        type: string
        description: Admin of the room.
      avatar:
        type: string
        description: Profile picture of the room.
      messages:
        type: array
        items:
          type: string
        description: History of all the messages sent in the room.
  Room-post:
    type: object
    properties:
      title:
        type: string
        description: Name of new room.
      description:
        type: string
        description: Description visible to the members.
      members:
        type: array
        items:
          type: string
        description: Members of the new room.
      visibility:
        type: string
        description: It can only be public or private.
  Room-add-users:
    type: object
    properties:
      title:
        type: string
        description: Name of the room.
      members:
        type: array
        items:
          type: string
        description: Usernames of the users being added to the room.
        
  Room-remove-users:
    type: object
    properties:
      title:
        type: string
        description: Name of the room.
      members:
        type: array
        items:
          type: string
        description: Usernames of the users being removed from the room.
        
  Friend:
    type: object
    properties:
      username:
        type: string
        description: Friend's username.
  Token:
    type: object
    properties:
      hash:
        type: string
        description: Token for authorization header.
  Activation-hash:
    type: object
    properties:
      hash:
        type: string
        description: Activation code received by email.
  Login:
    type: object
    properties:
      email:
        type: string
        description: Email of user.
      password:
        type: string
        description: password of user.
 
  Error:
    type: object
    properties:
      message:
        type: string
